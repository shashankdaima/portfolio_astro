---
// No props needed
---

<button id="theme-toggle" class="p-2 rounded focus:outline-none">
  <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m8-8h1m-16 0H3m2.293-7.293l-.707.707M16.95 16.95l.707.707m-12.02 0l.707-.707M19.657 6.343l-.707-.707M12 7a5 5 0 100 10 5 5 0 000-10z"></path>
  </svg>
  <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20.998h0a9.002 9.002 0 01-7.5-14.87 9 9 0 1012.725 12.725A8.964 8.964 0 0117 20.998z"></path>
  </svg>
</button>

<script>
  const themeToggleBtn = document.getElementById('theme-toggle');
  const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
  const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');

  const currentTheme = localStorage.getItem('theme');
  if (currentTheme) {
    document.documentElement.classList.add(currentTheme);
    if (currentTheme === 'dark') {
      themeToggleDarkIcon.classList.remove('hidden');
    } else {
      themeToggleLightIcon.classList.remove('hidden');
    }
  } else {
    themeToggleLightIcon.classList.remove('hidden');
  }

  themeToggleBtn.addEventListener('click', function () {
    themeToggleLightIcon.classList.toggle('hidden');
    themeToggleDarkIcon.classList.toggle('hidden');

    if (document.documentElement.classList.contains('dark')) {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
    } else {
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    }
  });
</script>
